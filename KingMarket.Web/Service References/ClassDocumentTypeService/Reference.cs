//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KingMarket.Web.ClassDocumentTypeService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Service.Exceptions")]
    [System.SerializableAttribute()]
    public partial class GeneralException : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClassDocumentTypeService.IClassDocumentTypeService")]
    public interface IClassDocumentTypeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentTypes", ReplyAction="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentTypesResponse")]
        System.Collections.Generic.List<KingMarket.Model.Models.ClassDocumentType> GetClassDocumentTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentTypes", ReplyAction="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.ClassDocumentType>> GetClassDocumentTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentTypeResponse")]
        KingMarket.Model.Models.ClassDocumentType GetClassDocumentType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/GetClassDocumentTypeResponse")]
        System.Threading.Tasks.Task<KingMarket.Model.Models.ClassDocumentType> GetClassDocumentTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/CreateClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/CreateClassDocumentTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Web.ClassDocumentTypeService.GeneralException), Action="http://tempuri.org/IClassDocumentTypeService/CreateClassDocumentTypeGeneralExcept" +
            "ionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Service.Exceptions")]
        void CreateClassDocumentType(KingMarket.Model.Models.ClassDocumentType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/CreateClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/CreateClassDocumentTypeResponse")]
        System.Threading.Tasks.Task CreateClassDocumentTypeAsync(KingMarket.Model.Models.ClassDocumentType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/EditClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/EditClassDocumentTypeResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Web.ClassDocumentTypeService.GeneralException), Action="http://tempuri.org/IClassDocumentTypeService/EditClassDocumentTypeGeneralExceptio" +
            "nFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Service.Exceptions")]
        void EditClassDocumentType(KingMarket.Model.Models.ClassDocumentType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/EditClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/EditClassDocumentTypeResponse")]
        System.Threading.Tasks.Task EditClassDocumentTypeAsync(KingMarket.Model.Models.ClassDocumentType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/DeleteClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/DeleteClassDocumentTypeResponse")]
        void DeleteClassDocumentType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClassDocumentTypeService/DeleteClassDocumentType", ReplyAction="http://tempuri.org/IClassDocumentTypeService/DeleteClassDocumentTypeResponse")]
        System.Threading.Tasks.Task DeleteClassDocumentTypeAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClassDocumentTypeServiceChannel : KingMarket.Web.ClassDocumentTypeService.IClassDocumentTypeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClassDocumentTypeServiceClient : System.ServiceModel.ClientBase<KingMarket.Web.ClassDocumentTypeService.IClassDocumentTypeService>, KingMarket.Web.ClassDocumentTypeService.IClassDocumentTypeService {
        
        public ClassDocumentTypeServiceClient() {
        }
        
        public ClassDocumentTypeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClassDocumentTypeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClassDocumentTypeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClassDocumentTypeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<KingMarket.Model.Models.ClassDocumentType> GetClassDocumentTypes() {
            return base.Channel.GetClassDocumentTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.ClassDocumentType>> GetClassDocumentTypesAsync() {
            return base.Channel.GetClassDocumentTypesAsync();
        }
        
        public KingMarket.Model.Models.ClassDocumentType GetClassDocumentType(int id) {
            return base.Channel.GetClassDocumentType(id);
        }
        
        public System.Threading.Tasks.Task<KingMarket.Model.Models.ClassDocumentType> GetClassDocumentTypeAsync(int id) {
            return base.Channel.GetClassDocumentTypeAsync(id);
        }
        
        public void CreateClassDocumentType(KingMarket.Model.Models.ClassDocumentType myObject) {
            base.Channel.CreateClassDocumentType(myObject);
        }
        
        public System.Threading.Tasks.Task CreateClassDocumentTypeAsync(KingMarket.Model.Models.ClassDocumentType myObject) {
            return base.Channel.CreateClassDocumentTypeAsync(myObject);
        }
        
        public void EditClassDocumentType(KingMarket.Model.Models.ClassDocumentType myObject) {
            base.Channel.EditClassDocumentType(myObject);
        }
        
        public System.Threading.Tasks.Task EditClassDocumentTypeAsync(KingMarket.Model.Models.ClassDocumentType myObject) {
            return base.Channel.EditClassDocumentTypeAsync(myObject);
        }
        
        public void DeleteClassDocumentType(int id) {
            base.Channel.DeleteClassDocumentType(id);
        }
        
        public System.Threading.Tasks.Task DeleteClassDocumentTypeAsync(int id) {
            return base.Channel.DeleteClassDocumentTypeAsync(id);
        }
    }
}
