//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KingMarket.Web.EmployeeTypeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeeTypeService.IEmployeeTypeService")]
    public interface IEmployeeTypeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/GetEmployeeTypes", ReplyAction="http://tempuri.org/IEmployeeTypeService/GetEmployeeTypesResponse")]
        System.Collections.Generic.List<KingMarket.Model.Models.EmployeeType> GetEmployeeTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/GetEmployeeTypes", ReplyAction="http://tempuri.org/IEmployeeTypeService/GetEmployeeTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.EmployeeType>> GetEmployeeTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/GetEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/GetEmployeeTypeResponse")]
        KingMarket.Model.Models.EmployeeType GetEmployeeType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/GetEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/GetEmployeeTypeResponse")]
        System.Threading.Tasks.Task<KingMarket.Model.Models.EmployeeType> GetEmployeeTypeAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/CreateEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/CreateEmployeeTypeResponse")]
        void CreateEmployeeType(KingMarket.Model.Models.EmployeeType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/CreateEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/CreateEmployeeTypeResponse")]
        System.Threading.Tasks.Task CreateEmployeeTypeAsync(KingMarket.Model.Models.EmployeeType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/EditEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/EditEmployeeTypeResponse")]
        void EditEmployeeType(KingMarket.Model.Models.EmployeeType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/EditEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/EditEmployeeTypeResponse")]
        System.Threading.Tasks.Task EditEmployeeTypeAsync(KingMarket.Model.Models.EmployeeType myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/DeleteEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/DeleteEmployeeTypeResponse")]
        void DeleteEmployeeType(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeTypeService/DeleteEmployeeType", ReplyAction="http://tempuri.org/IEmployeeTypeService/DeleteEmployeeTypeResponse")]
        System.Threading.Tasks.Task DeleteEmployeeTypeAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeTypeServiceChannel : KingMarket.Web.EmployeeTypeService.IEmployeeTypeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeTypeServiceClient : System.ServiceModel.ClientBase<KingMarket.Web.EmployeeTypeService.IEmployeeTypeService>, KingMarket.Web.EmployeeTypeService.IEmployeeTypeService {
        
        public EmployeeTypeServiceClient() {
        }
        
        public EmployeeTypeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeTypeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeTypeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeTypeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<KingMarket.Model.Models.EmployeeType> GetEmployeeTypes() {
            return base.Channel.GetEmployeeTypes();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.EmployeeType>> GetEmployeeTypesAsync() {
            return base.Channel.GetEmployeeTypesAsync();
        }
        
        public KingMarket.Model.Models.EmployeeType GetEmployeeType(int id) {
            return base.Channel.GetEmployeeType(id);
        }
        
        public System.Threading.Tasks.Task<KingMarket.Model.Models.EmployeeType> GetEmployeeTypeAsync(int id) {
            return base.Channel.GetEmployeeTypeAsync(id);
        }
        
        public void CreateEmployeeType(KingMarket.Model.Models.EmployeeType myObject) {
            base.Channel.CreateEmployeeType(myObject);
        }
        
        public System.Threading.Tasks.Task CreateEmployeeTypeAsync(KingMarket.Model.Models.EmployeeType myObject) {
            return base.Channel.CreateEmployeeTypeAsync(myObject);
        }
        
        public void EditEmployeeType(KingMarket.Model.Models.EmployeeType myObject) {
            base.Channel.EditEmployeeType(myObject);
        }
        
        public System.Threading.Tasks.Task EditEmployeeTypeAsync(KingMarket.Model.Models.EmployeeType myObject) {
            return base.Channel.EditEmployeeTypeAsync(myObject);
        }
        
        public void DeleteEmployeeType(int id) {
            base.Channel.DeleteEmployeeType(id);
        }
        
        public System.Threading.Tasks.Task DeleteEmployeeTypeAsync(int id) {
            return base.Channel.DeleteEmployeeTypeAsync(id);
        }
    }
}
