//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KingMarket.Web.SupplierService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SupplierService.ISupplierService")]
    public interface ISupplierService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersResponse")]
        System.Collections.Generic.List<KingMarket.Model.Models.Supplier> GetSuppliers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSuppliers", ReplyAction="http://tempuri.org/ISupplierService/GetSuppliersResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.Supplier>> GetSuppliersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplier", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierResponse")]
        KingMarket.Model.Models.Supplier GetSupplier(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/GetSupplier", ReplyAction="http://tempuri.org/ISupplierService/GetSupplierResponse")]
        System.Threading.Tasks.Task<KingMarket.Model.Models.Supplier> GetSupplierAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/CreateSupplier", ReplyAction="http://tempuri.org/ISupplierService/CreateSupplierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Model.Models.GeneralException), Action="http://tempuri.org/ISupplierService/CreateSupplierGeneralExceptionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Model.Models")]
        void CreateSupplier(KingMarket.Model.Models.Supplier myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/CreateSupplier", ReplyAction="http://tempuri.org/ISupplierService/CreateSupplierResponse")]
        System.Threading.Tasks.Task CreateSupplierAsync(KingMarket.Model.Models.Supplier myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/EditSupplier", ReplyAction="http://tempuri.org/ISupplierService/EditSupplierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Model.Models.GeneralException), Action="http://tempuri.org/ISupplierService/EditSupplierGeneralExceptionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Model.Models")]
        void EditSupplier(KingMarket.Model.Models.Supplier myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/EditSupplier", ReplyAction="http://tempuri.org/ISupplierService/EditSupplierResponse")]
        System.Threading.Tasks.Task EditSupplierAsync(KingMarket.Model.Models.Supplier myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Model.Models.GeneralException), Action="http://tempuri.org/ISupplierService/DeleteSupplierGeneralExceptionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Model.Models")]
        void DeleteSupplier(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISupplierService/DeleteSupplier", ReplyAction="http://tempuri.org/ISupplierService/DeleteSupplierResponse")]
        System.Threading.Tasks.Task DeleteSupplierAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISupplierServiceChannel : KingMarket.Web.SupplierService.ISupplierService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SupplierServiceClient : System.ServiceModel.ClientBase<KingMarket.Web.SupplierService.ISupplierService>, KingMarket.Web.SupplierService.ISupplierService {
        
        public SupplierServiceClient() {
        }
        
        public SupplierServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SupplierServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<KingMarket.Model.Models.Supplier> GetSuppliers() {
            return base.Channel.GetSuppliers();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.Supplier>> GetSuppliersAsync() {
            return base.Channel.GetSuppliersAsync();
        }
        
        public KingMarket.Model.Models.Supplier GetSupplier(int id) {
            return base.Channel.GetSupplier(id);
        }
        
        public System.Threading.Tasks.Task<KingMarket.Model.Models.Supplier> GetSupplierAsync(int id) {
            return base.Channel.GetSupplierAsync(id);
        }
        
        public void CreateSupplier(KingMarket.Model.Models.Supplier myObject) {
            base.Channel.CreateSupplier(myObject);
        }
        
        public System.Threading.Tasks.Task CreateSupplierAsync(KingMarket.Model.Models.Supplier myObject) {
            return base.Channel.CreateSupplierAsync(myObject);
        }
        
        public void EditSupplier(KingMarket.Model.Models.Supplier myObject) {
            base.Channel.EditSupplier(myObject);
        }
        
        public System.Threading.Tasks.Task EditSupplierAsync(KingMarket.Model.Models.Supplier myObject) {
            return base.Channel.EditSupplierAsync(myObject);
        }
        
        public void DeleteSupplier(int id) {
            base.Channel.DeleteSupplier(id);
        }
        
        public System.Threading.Tasks.Task DeleteSupplierAsync(int id) {
            return base.Channel.DeleteSupplierAsync(id);
        }
    }
}
