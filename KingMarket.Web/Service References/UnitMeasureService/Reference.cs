//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KingMarket.Web.UnitMeasureService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UnitMeasureService.IUnitMeasureService")]
    public interface IUnitMeasureService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/GetUnitMeasures", ReplyAction="http://tempuri.org/IUnitMeasureService/GetUnitMeasuresResponse")]
        System.Collections.Generic.List<KingMarket.Model.Models.UnitMeasure> GetUnitMeasures();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/GetUnitMeasures", ReplyAction="http://tempuri.org/IUnitMeasureService/GetUnitMeasuresResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.UnitMeasure>> GetUnitMeasuresAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/GetUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/GetUnitMeasureResponse")]
        KingMarket.Model.Models.UnitMeasure GetUnitMeasure(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/GetUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/GetUnitMeasureResponse")]
        System.Threading.Tasks.Task<KingMarket.Model.Models.UnitMeasure> GetUnitMeasureAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/CreateUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/CreateUnitMeasureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Model.Models.GeneralException), Action="http://tempuri.org/IUnitMeasureService/CreateUnitMeasureGeneralExceptionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Model.Models")]
        void CreateUnitMeasure(KingMarket.Model.Models.UnitMeasure myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/CreateUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/CreateUnitMeasureResponse")]
        System.Threading.Tasks.Task CreateUnitMeasureAsync(KingMarket.Model.Models.UnitMeasure myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/EditUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/EditUnitMeasureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Model.Models.GeneralException), Action="http://tempuri.org/IUnitMeasureService/EditUnitMeasureGeneralExceptionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Model.Models")]
        void EditUnitMeasure(KingMarket.Model.Models.UnitMeasure myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/EditUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/EditUnitMeasureResponse")]
        System.Threading.Tasks.Task EditUnitMeasureAsync(KingMarket.Model.Models.UnitMeasure myObject);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/DeleteUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/DeleteUnitMeasureResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(KingMarket.Model.Models.GeneralException), Action="http://tempuri.org/IUnitMeasureService/DeleteUnitMeasureGeneralExceptionFault", Name="GeneralException", Namespace="http://schemas.datacontract.org/2004/07/KingMarket.Model.Models")]
        void DeleteUnitMeasure(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUnitMeasureService/DeleteUnitMeasure", ReplyAction="http://tempuri.org/IUnitMeasureService/DeleteUnitMeasureResponse")]
        System.Threading.Tasks.Task DeleteUnitMeasureAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUnitMeasureServiceChannel : KingMarket.Web.UnitMeasureService.IUnitMeasureService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UnitMeasureServiceClient : System.ServiceModel.ClientBase<KingMarket.Web.UnitMeasureService.IUnitMeasureService>, KingMarket.Web.UnitMeasureService.IUnitMeasureService {
        
        public UnitMeasureServiceClient() {
        }
        
        public UnitMeasureServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UnitMeasureServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitMeasureServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UnitMeasureServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<KingMarket.Model.Models.UnitMeasure> GetUnitMeasures() {
            return base.Channel.GetUnitMeasures();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<KingMarket.Model.Models.UnitMeasure>> GetUnitMeasuresAsync() {
            return base.Channel.GetUnitMeasuresAsync();
        }
        
        public KingMarket.Model.Models.UnitMeasure GetUnitMeasure(int id) {
            return base.Channel.GetUnitMeasure(id);
        }
        
        public System.Threading.Tasks.Task<KingMarket.Model.Models.UnitMeasure> GetUnitMeasureAsync(int id) {
            return base.Channel.GetUnitMeasureAsync(id);
        }
        
        public void CreateUnitMeasure(KingMarket.Model.Models.UnitMeasure myObject) {
            base.Channel.CreateUnitMeasure(myObject);
        }
        
        public System.Threading.Tasks.Task CreateUnitMeasureAsync(KingMarket.Model.Models.UnitMeasure myObject) {
            return base.Channel.CreateUnitMeasureAsync(myObject);
        }
        
        public void EditUnitMeasure(KingMarket.Model.Models.UnitMeasure myObject) {
            base.Channel.EditUnitMeasure(myObject);
        }
        
        public System.Threading.Tasks.Task EditUnitMeasureAsync(KingMarket.Model.Models.UnitMeasure myObject) {
            return base.Channel.EditUnitMeasureAsync(myObject);
        }
        
        public void DeleteUnitMeasure(int id) {
            base.Channel.DeleteUnitMeasure(id);
        }
        
        public System.Threading.Tasks.Task DeleteUnitMeasureAsync(int id) {
            return base.Channel.DeleteUnitMeasureAsync(id);
        }
    }
}
