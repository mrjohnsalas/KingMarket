@model PagedList.IPagedList<KingMarket.Model.Models.CustomerContact>
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Index";
}

<div class="row">
    <div class="col-xs-12 col-sm-5 col-md-5">
        <h3>Customer Contacts</h3>
    </div>
    <div class="col-xs-12 col-sm-7 col-md-7 form-inline-padding-right">
        <div class="col-md-12">
            @using (Html.BeginForm("Index", "CustomerContacts", FormMethod.Get, htmlAttributes: new { @class = "form-inline pull-right" }))
            {
                <div class="form-group">
                    <div class="input-group">
                        @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @placeholder = "Search", @type = "search" })
                        <span class="input-group-btn">
                            <button class="btn btn-primary" type="submit">
                                <span class="glyphicon glyphicon-search"></span>
                            </button>
                        </span>
                    </div>
                </div>
                @Html.ActionLink("Add Customer Contact", "Create", null, new { @class = "btn btn-primary" })
            }
        </div>
    </div>
</div>

<hr class="empty">

<div class="table-responsive">
<table class="table table-striped table-hover">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Business Name", "Index", new { sortOrder = ViewBag.BusinessNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Document Type", "Index", new { sortOrder = ViewBag.DocumentTypeSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Document Number", "Index", new { sortOrder = ViewBag.DocumentNumberSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("First Name", "Index", new { sortOrder = ViewBag.FirstNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.LastNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Second Last Name", "Index", new { sortOrder = ViewBag.SecondLastNameSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Email", "Index", new { sortOrder = ViewBag.EmailSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.ActionLink("Phone", "Index", new { sortOrder = ViewBag.PhoneSortParm, currentFilter = ViewBag.CurrentFilter })
            </th>
            <th>
                @Html.Label("Actions")
            </th>
        </tr>
    </thead>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Customer.BusinessName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentType.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DocumentNumber)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.SecondLastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    <a href="@Url.Action("Details", new { id = item.CustomerContactId })" class="btn btn-success btn-xs"><span class="glyphicon glyphicon-folder-close"></span>  View</a>
                    <a href="@Url.Action("Edit", new { id = item.CustomerContactId })" class="btn btn-info btn-xs"><span class="glyphicon glyphicon-pencil"></span>  Edit</a>
                    <a href="@Url.Action("Delete", new { id = item.CustomerContactId })" class="deleteCartItem btn btn-danger btn-xs"><span class="glyphicon glyphicon-trash"></span>  Delete</a>
                </td>
            </tr>
        }
</table>
</div>
<br />
<nav class="text-center">
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</nav>
